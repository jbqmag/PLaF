let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3} 

in let find_bt = 
    letrec find_bt_helper (nd) = proc (x) 
        if number?(nd) 
        then false
        else if nd.data = x
            then true
            else (find_bt_helper (nd.left) x) || (find_bt_helper (nd.right) x)
    in proc (t x) { ((find_bt_helper t.root) x) }

in begin
    ((find_bt t1) 12)
end
